version: '3'

services:

  # Proxies requests to internal services
  reverse-proxy:
    image: nginx:1.17.10
    container_name: nginx_reverse_proxy
    depends_on:
        - report
        - report_engine
        - revenue_service
        - expenditure_service
        - report_aggregate_service
    volumes:
      - ./reverse_proxy/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80

  # report
  report:
    image: report
    container_name: report
    build:
      context: ./report
    depends_on:
        - report_engine
        - report_aggregate_service
        - revenue_service
        - expenditure_service
    ports:
      - 8080:80
    restart: on-failure
    deploy:
      replicas: 3


  # Retrieves the revenue
  revenue_service:
    image: revenue_service
    container_name: revenue_service
    build:
      context: ./revenue_service
    ports:
      - 5001:5001
    restart: on-failure
    deploy:
      replicas: 3

  # Retrieves the expense
  expenditure_service:
    image: expenditure_service
    container_name: expenditure_service
    build:
      context: ./expenditure_service
    ports:
      - 5002:5002
    restart: on-failure
    deploy:
      replicas: 3

  # Generates a report_aggregate_service
  report_aggregate_service:
    image: report_aggregate_service
    container_name: report_aggregate_service
    build:
      context: ./report_aggregate_service
    ports:
      - 5003:5003
    restart: on-failure
    deploy:
      replicas: 3


# process the engine
  report_engine:
    image: report_engine
    container_name: report_engine
    build:
      context: ./report_engine
    ports:
      - 5004:5004
    restart: on-failure
    deploy:
      replicas: 3

  database:
    image: database
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD} 
            app_version: ${app_version}
    deploy:
      replicas: 3